{"version":3,"sources":["firebase.js","Post.js","ImageUpload.js","Stories.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","username","postId","user","imageUrl","caption","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","text","type","placeholder","value","onChange","e","target","disable","onClick","event","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageUpload","setCaption","progress","setProgress","image","setImage","max","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","Stories","React","id","state","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","posts","setPosts","setUsername","email","setEmail","password","setPassword","open","setopen","openSignIn","setopenSignIn","setUser","onAuthStateChanged","authUser","post","Modal","onClose","style","Input","createUserWithEmailAndPassword","updateProfile","catch","signInWithEmailAndPassword","signOut","clientAccessToken","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67b977e2.chunk.js","sourcesContent":["// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\n\r\n  import firebase from \"firebase\";\r\n\r\n  const firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAbJrsHxDioUesFIJ6Rcm2QgjfxNMrE12A\",\r\n    authDomain: \"instagram-clone-f405f.firebaseapp.com\",\r\n    projectId: \"instagram-clone-f405f\",\r\n    storageBucket: \"instagram-clone-f405f.appspot.com\",\r\n    messagingSenderId: \"1026160056810\",\r\n    appId: \"1:1026160056810:web:b13dce151bb23af4d6fa93\",\r\n    measurementId: \"G-R2H4Q4SFKD\"\r\n\r\n  });\r\n  const db = firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const storage = firebase.storage();\r\n\r\n  export { db , auth , storage};","import React,{ useState, useEffect } from 'react'\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\nimport \"./Post.css\"\r\nimport { db, auth } from './firebase';\r\nimport firebase from 'firebase';\r\nimport {\r\n    FaSistrix,\r\n    FaTelegramPlane,\r\n    FaRegCompass,\r\n    FaRegHeart,\r\n  } from \"react-icons/fa\";\r\n  import { MdHome } from \"react-icons/md\";\r\n\r\n\r\nfunction Post({ username, postId,user,imageUrl, caption}) {\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if (postId) {\r\n            unsubscribe = db\r\n                .collection(\"posts\")\r\n                .doc(postId)\r\n                .collection(\"comments\")\r\n                .orderBy('timestamp', 'asc')\r\n                .onSnapshot((snapshot) => {\r\n                    setComments(snapshot.docs.map((doc) => doc.data()));\r\n                })\r\n        }\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [postId]);\r\n\r\n    const postComment = (event) => {\r\n        event.preventDefault();\r\n        db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n            text: comment,\r\n            username: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        });\r\n        setComment('');\r\n            \r\n    }\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post_header\">\r\n                {/* header --avatar +username*/} \r\n                <Avatar\r\n                 className=\"post-avatar\" \r\n                 alt='Sajid'\r\n                 src=\"{username} \" \r\n                />\r\n                <h3>{username}</h3>\r\n           </div>\r\n            \r\n           {/*image*/}\r\n           <img className=\"post_image\" src={imageUrl} alt=\"\" />\r\n            <span><FaRegHeart className=\"Image__icons\" /></span>\r\n            <span><FaRegCompass className=\"Image__icons\" /></span>\r\n            <span><FaTelegramPlane className=\"Image__icons\"/></span>\r\n           <h3 className=\"post_text\"><strong>{username}  </strong>{caption}</h3>\r\n           {/*username +caption*/}\r\n\r\n          \r\n           <div className=\"post__comments\">\r\n                {comments.map((comment) => (\r\n                        <p>\r\n                           \r\n                                <strong >\r\n                                    {comment.username}: \r\n                                </strong> {comment.text}\r\n                           \r\n                            \r\n                        </p>\r\n                ))}\r\n            </div>\r\n\r\n\r\n                {user && ( // Only display this comment form input if the user has logged in\r\n                    <form className=\"post_commentBox\">\r\n                        <input\r\n                            className=\"post_input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Add a comment\"\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}>\r\n                         </input>\r\n\r\n                        <button\r\n                            className=\"post_button\"\r\n                            disable={!comment}\r\n                            type=\"submit\"\r\n                            onClick={postComment}\r\n                        >\r\n                          Comment\r\n                        </button>\r\n                    </form>\r\n                )}\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import { Button } from '@material-ui/core'\r\nimport React, { useState} from 'react'\r\nimport { db, storage } from './firebase';\r\nimport firebase from 'firebase'\r\nimport './ImageUpload.css'\r\n\r\n\r\n\r\n\r\n\r\nfunction ImageUpload({username}) {\r\n    const [caption,setCaption] = useState('')\r\n    const [progress,setProgress]= useState(0);\r\n    const [image,setImage] = useState(null);\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.files[0]){\r\n            setImage(e.target.files[0]);\r\n        }\r\n    }\r\n    const handleUpload = () => {\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                const progress = Math.round(\r\n                    ( snapshot.bytesTransferred / snapshot.totalBytes)  * 100\r\n                );\r\n                setProgress(progress);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                alert(error.message);\r\n            },\r\n            () =>{\r\n                storage\r\n                .ref(\"images\")\r\n                .child(image.name)\r\n                .getDownloadURL()\r\n                .then(url => {\r\n                    db.collection(\"posts\").add({\r\n                        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                        caption: caption,\r\n                        imageUrl: url,\r\n                        username: username\r\n                    });\r\n                    setProgress(0);\r\n                    setCaption('');\r\n                    setImage(null);\r\n                })\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"imageupload\">  \r\n             <progress className=\"uploadprogress\" value={progress} max=\"100\"></progress>\r\n            <input type=\"text\" placeholder=\"enter a caption\" onChange={event => setCaption(event.target.value)} value={caption}/>\r\n            <input type=\"file\"  onChange={handleChange}/>\r\n            <Button className=\"imageupload_button\" onClick={handleUpload}>Upload</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","import React from \"react\";\n\nconst Stories = () => {\n  const [state, setState] = React.useState([\n    { id: 1, image: \"/images/amir.jpg\", name: \"shakil432\" },\n    { id: 2, image: \"/images/imran.jpg\", name: \"ahsan32\" },\n    { id: 3, image: \"/images/irfan.jpg\", name: \"babar42\" },\n    { id: 4, image: \"/images/salman.jpg\", name: \"fawad2\" },\n    { id: 5, image: \"/images/sharuk.jpg\", name: \"feroz432\" },\n    { id: 6, image: \"/images/sushant.jpg\", name: \"adil5\" },\n  //  { id: 7, image: \"\", name: \"imran4\" },\n   /// { id: 8, image: \"\", name: \"khan4\" },\n   // { id: 9, image: \"\", name: \"alikhan4\" },\n  ]);\n  return (\n    <div className=\"stories\">\n      {state.map((user) => (\n        <div className=\"stories__info\" key={user.id}>\n          <div className=\"stories__img\">\n            <span>\n              <img src={user.image} alt=\"user\" />\n            </span>\n          </div>\n          <div className=\"stories__name\">{user.name}</div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Stories;\n","\r\nimport React, { useState , useEffect } from 'react';\r\nimport './App.css';\r\nimport Post from './Post';\r\nimport { db , auth } from './firebase';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Input } from '@material-ui/core';\r\nimport ImageUpload from './ImageUpload'\r\nimport InstagramEmbed from 'react-instagram-embed';\r\nimport {\r\n  FaSistrix,\r\n  FaTelegramPlane,\r\n  FaRegCompass,\r\n  FaRegHeart,\r\n} from \"react-icons/fa\";\r\nimport { MdHome } from \"react-icons/md\";\r\nimport Stories from './Stories'\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 \r\n  const left = 50 \r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [posts, setPosts] =useState([]);\r\n  const [username,setUsername] = useState('');\r\n  const [email,setEmail] = useState('') ;\r\n  const [password,setPassword] = useState('');\r\n  const [open,setopen] = useState(false);\r\n  const [openSignIn,setopenSignIn] = useState(false);\r\n\r\n  const [user,setUser] = useState(null)\r\n\r\n\r\n   useEffect(() => {\r\n   const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      if(authUser){\r\n        //user is loggedin//\r\n        console.log(authUser);\r\n        setUser(authUser)\r\n       \r\n      }else{\r\n        ///user is logged out//\r\n        setUser(null)\r\n      }\r\n    })\r\n    return () => {\r\n      //perform some  clean up//\r\n      unsubscribe()\r\n    }\r\n     },[user, username]);\r\n\r\n  useEffect(()=>{\r\n    db.collection('posts').orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n      setPosts(snapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        post: doc.data()\r\n      })));\r\n    })\r\n\r\n  },[]);\r\n  const signUp = (event) =>{\r\n    event.preventDefault();\r\n    auth.createUserWithEmailAndPassword(email, password)\r\n    .then((authUser) => {\r\n      authUser.user.updateProfile({\r\n       displayName: username\r\n      })\r\n    })\r\n    .catch((error) => alert(error.message));\r\n  }\r\n  const signIn = (event) => {\r\n    event.preventDefault();\r\n    auth.signInWithEmailAndPassword(email,password)\r\n    .catch((error) => {\r\n      alert(error.message)\r\n    })\r\n    setopenSignIn(false)\r\n\r\n  }\r\n\r\n  return (\r\n    \r\n\r\n    <div className=\"App\">\r\n      {/* Caption input */}\r\n      {/* post picture */}\r\n      {/*post Button */}\r\n    \r\n      <Modal\r\n        open={open}\r\n        onClose={() => setopen(false)}\r\n       \r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"app_signup\">\r\n          <center>\r\n            <img className=\"app_headerImg\" src=\"./download.png\" alt=\"hello world\"/>\r\n          </center>\r\n            <Input placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}>\r\n            </Input>\r\n              <Input placeholder=\"username\"\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}>\r\n            </Input>\r\n            <Input placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}>\r\n              </Input>\r\n            <Button onClick={signUp}>SignUp</Button>\r\n       </form>\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        open={openSignIn}\r\n        onClose={() => setopenSignIn(false)}\r\n       \r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"app_signup\">\r\n          <center>\r\n            <img className=\"app_headerImg\" src=\"./download.png\" alt=\"hello world\"/>\r\n          </center>\r\n            <Input placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}>\r\n            </Input >\r\n            <Input placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}>\r\n              </Input>\r\n            <Button type=\"submit\" onClick={signIn}>SignIn</Button>\r\n       </form>\r\n        </div>\r\n      </Modal>\r\n       {/* Header */}\r\n      <div className=\"app_header\">\r\n        <img className=\"app_headerImg\" src=\"./download.png\" alt=\"hello world\"/>\r\n        <div className=\"navbar\">\r\n      <div className=\"navbar__last\">\r\n        <li>\r\n          <MdHome className=\"navbar__icons\" />\r\n        </li>\r\n        <li>\r\n          <FaTelegramPlane className=\"navbar__icons\" />\r\n        </li>\r\n        <li>\r\n          <FaRegCompass className=\"navbar__icons\" />\r\n        </li>\r\n        <li>\r\n          <FaRegHeart className=\"navbar__icons\" />\r\n        </li>\r\n        </div>\r\n        </div>\r\n        {\r\n        user ? (\r\n          <Button onClick={() => auth.signOut()}>Logout</Button>\r\n        ): (\r\n          <div className=\"app_loginContainer\">\r\n          <Button onClick={() => setopenSignIn(true)}>Sign In</Button>\r\n          <Button onClick={() => setopen(true)}>Sign Up</Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Stories />\r\n        <div className=\"app_posts\">\r\n          {posts.map(({id,post}) => (\r\n            <Post key={id} postId={id} user={user}  username={post.username} caption={post.caption} imageUrl={post.imageUrl} />\r\n          )\r\n          )}\r\n         \r\n         <InstagramEmbed\r\n            url='https://www.instagram.com/p/B_uf9dmAGPw/'\r\n            clientAccessToken='123|456'\r\n            maxWidth={320}\r\n            hideCaption={false}\r\n            containerTagName='div'\r\n            protocol=''\r\n            injectScript\r\n            onLoading={() => {}}\r\n            onSuccess={() => {}}\r\n            onAfterRender={() => {}}\r\n            onFailure={() => {}}\r\n          />\r\n          \r\n        \r\n        </div>\r\n        \r\n      \r\n       \r\n       {user?.displayName ? (\r\n         <ImageUpload username={user.displayName}/>\r\n      ): (\r\n        <h3> Sorry You Need To Login</h3>\r\n      )}\r\n      \r\n\r\n      {/*<Post username=\"Sajid\"  caption=\"Sun  is far\" imageUrl=\"./download.png\"/>*/}\r\n      {/* posts */}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}